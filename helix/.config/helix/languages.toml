[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
# packageManager = "yarn"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = {}
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]
config = {}

[language-server.ruff]
command = "ruff"
args = ["server"]

[[language]]
name = "svelte"
auto-format = true

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'prettierd', args = [".js"] }
auto-format = true

[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'prettierd', args = [".ts"] }
auto-format = true

[[language]]
name = "jsx"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'prettierd', args = [".jsx"] }
auto-format = true

[[language]]
name = "tsx"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'prettierd', args = [".tsx"] }
auto-format = true

[[language]]
name = "python"
roots = ["pyproject.toml", "setup.py", "Poetry.lock", ".git"]
shebangs = ["python"]
language-servers = ["ruff", "pyright"]
auto-format = true
formatter = {command = 'black', args = ["--quiet", "-"]}
